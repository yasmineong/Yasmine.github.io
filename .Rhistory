mutate(market_share = count / sum(count) * 100) %>%
arrange(desc(market_share)) %>%
head(10)
pie(market_share$market_share,
labels = paste(market_share$Brand, ": ", round(market_share$market_share, 2), "%"),
main = "Market Share Analysis by Car Brand (Top 10)",
col = c("#004BF8", "#0080F8", "#00A9F8", "#02CEF7", "#02E8F7", "#A3F7FF", "#A3AEFF","#C489FF" "#B603FF", "#6C03BE"),
market_share <- cars %>%
group_by(Brand) %>%
summarise(count = n()) %>%
mutate(market_share = count / sum(count) * 100) %>%
arrange(desc(market_share)) %>%
head(10)
pie(market_share$market_share,
labels = paste(market_share$Brand, ": ", round(market_share$market_share, 2), "%"),
main = "Market Share Analysis by Car Brand (Top 10)",
col = c("#004BF8", "#0080F8", "#00A9F8", "#02CEF7", "#02E8F7", "#A3F7FF", "#A3AEFF", "#C489FF", "#B603FF", "#6C03BE"),
font = 3,
cex = 0.8)
new_cars <- read.csv("used_cars_data.csv")
glimpse(new_cars)
<iframe height="400" width="100%" frameborder="no" src="https://cc01lz-yasmineong.shinyapps.io/MyShinyApp/"> </iframe>
library(tidyverse)
library(tidyverse)
library(tidyverse)
?knitr::`knitr-package`
setwd("~/Documents/NUS/NM2207")
knitr::include_graphics("data.png")
setwd("~/Documents/NUS/NM2207/Yasmine.github.io")
knitr::include_graphics("data.png")
cars %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
bullet_list <- c(
"Brand & Model",
"Location",
"Year",
"Kilometers driven",
"Fuel type",
"Transmission type",
"Owner type",
"Mileage: How many kilometers the vehicle can travel per litre of fuel",
"Engine: Measured in cubic capacity (CC). It refers to the amount of air and fuel that can be pushed through the cylinders in the engine. In most cases, the bigger the capacity, the more powerful the vehicle.",
"Power: Measured in brake horsepower (BHP). It refers to the horsepower of the car after accounting for the frictional losses in power from the engine. Generally, a higher BHP means increased speed, strength, and overall capabilities on the road. ",
"Number of seats",
"Price: 1 Lakh = 100,000"
)
bullet_list <- c(
"Brand & Model",
"Location",
"Year",
"Kilometers driven",
"Fuel type",
"Transmission type",
"Owner type",
"Mileage: How many kilometers the vehicle can travel per litre of fuel",
"Engine: Measured in cubic capacity (CC). It refers to the amount of air and fuel that can be pushed through the cylinders in the engine. In most cases, the bigger the capacity, the more powerful the vehicle.",
"Power: Measured in brake horsepower (BHP). It refers to the horsepower of the car after accounting for the frictional losses in power from the engine. Generally, a higher BHP means increased speed, strength, and overall capabilities on the road. ",
"Number of seats",
"Price: 1 Lakh = 100,000"
)
bullet_list
bullet_list <- c(
"Brand & Model",
"Location",
"Year",
"Kilometers driven",
"Fuel type",
"Transmission type",
"Owner type",
"Mileage: How many kilometers the vehicle can travel per litre of fuel",
"Engine: Measured in cubic capacity (CC). It refers to the amount of air and fuel that can be pushed through the cylinders in the engine. In most cases, the bigger the capacity, the more powerful the vehicle.",
"Power: Measured in brake horsepower (BHP). It refers to the horsepower of the car after accounting for the frictional losses in power from the engine. Generally, a higher BHP means increased speed, strength, and overall capabilities on the road. ",
"Number of seats",
"Price: 1 Lakh = 100,000"
)
cat(paste(". ", bullet_list, "\n", sep = ""))
bullet_list <- c(
"Exploratory data analysis (EDA) to understand trends and patterns in the automotive market.",
"Predictive modeling to estimate car prices based on their specifications.",
"Classification tasks to predict car types or fuel efficiency based on attributes.",
"Market research to understand consumer preferences and buying behavior in the automotive industry."
)
cat(paste(". ", bullet_list, "\n", sep = ""))
bullet_list <- c("Exploratory data analysis (EDA) to understand trends and patterns in the automotive market.",
"Predictive modeling to estimate car prices based on their specifications.",
"Classification tasks to predict car types or fuel efficiency based on attributes.",
"Market research to understand consumer preferences and buying behavior in the automotive industry."
)
cat(paste(". ", bullet_list, "\n", sep = ""))
bullet_list <- c(
"Exploratory data analysis (EDA) to understand trends and patterns in the automotive market.",
"Predictive modeling to estimate car prices based on their specifications.",
"Classification tasks to predict car types or fuel efficiency based on attributes.",
"Market research to understand consumer preferences and buying behavior in the automotive industry.",
"Academic research in fields like transportation engineering, automotive engineering, data science, and machine learning.",
"Product development",
"Risk assessment"
)
cat(paste(". ", bullet_list, "\n", sep = ""))
cars_summary <- cars %>%
group_by(Brand) %>%
summarize(Count = n()) %>%
arrange(desc(Count))
cars_summary <- cars %>%
group_by(Brand) %>%
summarise(Count = n()) %>%
arrange(desc(Count))
top_10_brands <- cars_summary %>%
head(10) %>%
pull(Brand)
cars$Top_10 <- ifelse(cars$Brand %in% top_10_brands, "Top 10", "Others")
ggplot(cars, aes(x = Price, y = Brand)) +
geom_boxplot() +
facet_wrap(~ Top_10, scales = "free_y") +
labs(title = "Price Ranges for Each Car Brand",
x = "Price",
y = "Brand") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggcorrplot)
numerical_variables <- cars %>%
na.omit() %>%
select(Price, Car_age, Kilometers_Driven, Mileage_value, `Engine/CC`, `Power/bhp`, Seats)
ggcorrplot(cor(numerical_variables),
hc.order = TRUE,
lab = TRUE,
lab_size = 2,
outline.color = "black",  # Color of the outline
colors = c("blue", "white", "red"),  # Color palette
title = "Correlation Heatmap of Numerical variables")
library(ggcorrplot)
numerical_variables <- cars %>%
na.omit() %>%
select(Price, Car_age, Kilometers_Driven, Mileage_value, `Engine/CC`, `Power/bhp`, Seats)
ggcorrplot(cor(numerical_variables),
hc.order = TRUE,
lab = TRUE,
lab_size = 2,
outline.color = "black",  # Color of the outline
colors = c("blue", "white", "yellow"),  # Color palette
title = "Correlation Heatmap of Numerical variables")
library(ggcorrplot)
numerical_variables <- cars %>%
na.omit() %>%
select(Price, Car_age, Kilometers_Driven, Mileage_value, `Engine/CC`, `Power/bhp`, Seats)
ggcorrplot(cor(numerical_variables),
hc.order = TRUE,
lab = TRUE,
lab_size = 2,
outline.color = "black",  # Color of the outline
colors = c("blue", "white", "red"),  # Color palette
title = "Correlation Heatmap of Numerical variables")
cars %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 <- cars %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph7 <- cars %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
graph1 <- cars %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph7 <- cars %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 1)
graph1 <- cars %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph7 <- cars %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
graph1 <- cars %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph7 <- cars %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 3)
graph1 <- cars %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph7 <- cars %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
bullet_list <- c(
" Brand & Model",
"Location: Certain cities in India",
"Year",
"Kilometers driven",
"Fuel type",
"Transmission type",
"Owner type",
"Mileage: How many kilometers the vehicle can travel per litre of fuel",
"Engine: Measured in cubic capacity (CC). It refers to the amount of air and fuel that can be pushed through the cylinders in the engine. In most cases, the bigger the capacity, the more powerful the vehicle.",
"Power: Measured in brake horsepower (BHP). It refers to the horsepower of the car after accounting for the frictional losses in power from the engine. Generally, a higher BHP means increased speed, strength, and overall capabilities on the road. ",
"Number of seats",
"Price: 1 Lakh = 100,000"
)
cat(paste(". ", bullet_list, "\n", sep = ""))
bullet_list <- c(
" Brand & Model",
"Location: Certain cities in India",
"Year",
"Kilometers driven",
"Fuel type",
"Transmission type",
"Owner type",
"Mileage: How many kilometers the vehicle can travel per litre of fuel",
"Engine: Measured in cubic capacity (CC). It refers to the amount of air and fuel that can be pushed through the cylinders in the engine. In most cases, the bigger the capacity, the more powerful the vehicle.",
"Power: Measured in brake horsepower (BHP). It refers to the horsepower of the car after accounting for the frictional losses in power from the engine. Generally, a higher BHP means increased speed, strength, and overall capabilities on the road. ",
"Number of seats",
"Price: 1 Lakh = 100,000"
)
cat(paste(" . ", bullet_list, "\n", sep = ""))
bullet_list <- c(
"Brand & Model",
"Location: Certain cities in India",
"Year",
"Kilometers driven",
"Fuel type",
"Transmission type",
"Owner type",
"Mileage: How many kilometers the vehicle can travel per litre of fuel",
"Engine: Measured in cubic capacity (CC). It refers to the amount of air and fuel that can be pushed through the cylinders in the engine. In most cases, the bigger the capacity, the more powerful the vehicle.",
"Power: Measured in brake horsepower (BHP). It refers to the horsepower of the car after accounting for the frictional losses in power from the engine. Generally, a higher BHP means increased speed, strength, and overall capabilities on the road. ",
"Number of seats",
"Price: 1 Lakh = 100,000"
)
cat(paste(". ", bullet_list, "\n", sep = ""))
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
?.groups
cars_summary <- cars %>%
group_by(Brand) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
na.omit()
top_10_brands <- cars_summary %>%
head(10) %>%
pull(Brand)
cars$Top_10 <- ifelse(cars$Brand %in% top_10_brands, "Top 10", "Others")
ggplot(cars, aes(x = Price, y = Brand)) +
geom_boxplot() +
facet_wrap(~ Top_10, scales = "free_y") +
labs(title = "Price Ranges for Each Car Brand",
x = "Price",
y = "Brand") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
cars_summary <- cars %>%
na.omit() %>%
group_by(Brand) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
top_10_brands <- cars_summary %>%
head(10) %>%
pull(Brand)
cars_summary <- cars %>%
group_by(Brand) %>%
na.omit() %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
top_10_brands <- cars_summary %>%
head(10) %>%
pull(Brand)
cars %>%
filter(Owner_Type == "Second") %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
labs(title = "Overall prices of second hand cars in India against time") +
theme_bw()
library(lubridate)
library(stringr)
cars %>%
filter(Owner_Type == "Second") %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Location, Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
labs(title = "Prices of second hand cars in different parts of India against time") +
facet_wrap(~ Location, nrow = 4, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, size = 7, vjust = 0.5))
cars %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
facet_grid(~Owner_Type)
cars %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
facet_wrap(~ Owner_Type)
cars %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
facet_wrap(~ Owner_Type) +
labs(title = "Overall prices of second hand cars in India against time") +
theme_bw()
cars %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year, Owner_Type) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
labs(title = "Overall prices of second hand cars in India against time") +
theme_bw()
cars %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year, Owner_Type) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
facet_wrap(~ Owner_Type) +
labs(title = "Overall prices of second hand cars in India against time") +
theme_bw()
cars %>%
filter(Owner_Type == "First", "Second") %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year, Owner_Type) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
facet_wrap(~ Owner_Type) +
labs(title = "Overall prices of second hand cars in India against time") +
theme_bw()
cars %>%
filter(Owner_Type == c("First", "Second")) %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year, Owner_Type) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
facet_wrap(~ Owner_Type) +
labs(title = "Overall prices of second hand cars in India against time") +
theme_bw()
cars %>%
filter(Owner_Type == c("First", "Second")) %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year, Owner_Type) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
facet_wrap(~ Owner_Type) +
labs(title = "Overall prices of first and second hand cars in India against time") +
theme_bw()
cars_summary <- cars %>%
group_by(Brand) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
top_10_brands <- cars_summary %>%
head(10) %>%
pull(Brand)
cars_summary <- cars %>%
group_by(Brand) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
top_10_brands <- cars_summary %>%
head(10) %>%
pull(Brand)
cars_summary <- cars %>%
group_by(Brand) %>%
summarise(Count = n()) %>%
arrange(desc(Count))
top_10_brands <- cars_summary %>%
head(10) %>%
pull(Brand)
cars$Top_10 <- ifelse(cars$Brand %in% top_10_brands, "Top 10", "Others")
ggplot(cars, aes(x = Price, y = Brand)) +
geom_boxplot() +
facet_wrap(~ Top_10, scales = "free_y") +
labs(title = "Price Ranges for Each Car Brand",
x = "Price",
y = "Brand") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
