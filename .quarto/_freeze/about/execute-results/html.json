{
  "hash": "d0dc78316a0b334e60f3862d808f441e",
  "result": {
    "markdown": "---\ntitle: \"Data Introduction\"\n---\n\n\nFor my analysis, I will be looking at a dataset about cars that was found on Kaggle: https://www.kaggle.com/datasets/ayushparwal2026/cars-dataset.\n\n\n**Title**: Cars Dataset\n\n**Description**:\nThe Cars Dataset contains information about various car models, including their specifications and pricing details in certain parts of India. It a collection of attributes related to different car models, possibly intended for analysis, modeling, or machine learning tasks related to the automotive industry.\n\n**Attributes**:\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n.  Brand & Model\n . Location: Certain cities in India\n . Year\n . Kilometers driven\n . Fuel type\n . Transmission type\n . Owner type\n . Mileage: How many kilometers the vehicle can travel per litre of fuel\n . Engine: Measured in cubic capacity (CC). It refers to the amount of air and fuel that can be pushed through the cylinders in the engine. In most cases, the bigger the capacity, the more powerful the vehicle.\n . Power: Measured in brake horsepower (BHP). It refers to the horsepower of the car after accounting for the frictional losses in power from the engine. Generally, a higher BHP means increased speed, strength, and overall capabilities on the road. \n . Number of seats\n . Price: 1 Lakh = 100,000\n```\n:::\n:::\n\n\n**Potential Use Cases**:\nThis dataset could be used for various analytical purposes, including:\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n.  Exploratory data analysis (EDA) to understand trends and patterns in the automotive market.\n . Predictive modeling to estimate car prices based on their specifications.\n . Classification tasks to predict car types or fuel efficiency based on attributes.\n . Market research to understand consumer preferences and buying behavior in the automotive industry.\n . Academic research in fields like transportation engineering, automotive engineering, data science, and machine learning.\n . Product development\n . Risk assessment\n```\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 7,253\nColumns: 14\n$ S.No.             <int> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15…\n$ Name              <chr> \"Maruti Wagon R LXI CNG\", \"Hyundai Creta 1.6 CRDi SX…\n$ Location          <chr> \"Mumbai\", \"Pune\", \"Chennai\", \"Chennai\", \"Coimbatore\"…\n$ Year              <int> 2010, 2015, 2011, 2012, 2013, 2012, 2013, 2016, 2013…\n$ Kilometers_Driven <int> 72000, 41000, 46000, 87000, 40670, 75000, 86999, 360…\n$ Fuel_Type         <chr> \"CNG\", \"Diesel\", \"Petrol\", \"Diesel\", \"Diesel\", \"LPG\"…\n$ Transmission      <chr> \"Manual\", \"Manual\", \"Manual\", \"Manual\", \"Automatic\",…\n$ Owner_Type        <chr> \"First\", \"First\", \"First\", \"First\", \"Second\", \"First…\n$ Mileage           <chr> \"26.6 km/kg\", \"19.67 kmpl\", \"18.2 kmpl\", \"20.77 kmpl…\n$ Engine            <chr> \"998 CC\", \"1582 CC\", \"1199 CC\", \"1248 CC\", \"1968 CC\"…\n$ Power             <chr> \"58.16 bhp\", \"126.2 bhp\", \"88.7 bhp\", \"88.76 bhp\", \"…\n$ Seats             <int> 5, 5, 5, 7, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 7, 5, 5…\n$ New_Price         <chr> \"\", \"\", \"8.61 Lakh\", \"\", \"\", \"\", \"\", \"21 Lakh\", \"\", …\n$ Price             <dbl> 1.75, 12.50, 4.50, 6.00, 17.74, 2.35, 3.50, 17.50, 5…\n```\n:::\n:::\n\n\n# Tidying data\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 2 rows [4447,\n4905].\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Power/bhp = as.numeric(str_remove(Power, \"bhp\"))`.\nCaused by warning:\n! NAs introduced by coercion\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 7,253\nColumns: 16\n$ Brand             <chr> \"Maruti\", \"Hyundai\", \"Honda\", \"Maruti\", \"Audi\", \"Hyu…\n$ Model             <chr> \"Wagon R LXI CNG\", \"Creta 1.6 CRDi SX Option\", \"Jazz…\n$ Location          <chr> \"Mumbai\", \"Pune\", \"Chennai\", \"Chennai\", \"Coimbatore\"…\n$ Year              <int> 2010, 2015, 2011, 2012, 2013, 2012, 2013, 2016, 2013…\n$ Car_age           <dbl> 14, 9, 13, 12, 11, 12, 11, 8, 11, 12, 6, 12, 9, 10, …\n$ Kilometers_Driven <int> 72000, 41000, 46000, 87000, 40670, 75000, 86999, 360…\n$ Fuel_Type         <chr> \"CNG\", \"Diesel\", \"Petrol\", \"Diesel\", \"Diesel\", \"LPG\"…\n$ Transmission      <chr> \"Manual\", \"Manual\", \"Manual\", \"Manual\", \"Automatic\",…\n$ Owner_Type        <chr> \"First\", \"First\", \"First\", \"First\", \"Second\", \"First…\n$ Mileage_value     <dbl> 26.60, 19.67, 18.20, 20.77, 15.20, 21.10, 23.08, 11.…\n$ Mileage_unit      <chr> \"km/kg\", \"kmpl\", \"kmpl\", \"kmpl\", \"kmpl\", \"km/kg\", \"k…\n$ `Engine/CC`       <dbl> 998, 1582, 1199, 1248, 1968, 814, 1461, 2755, 1598, …\n$ `Power/bhp`       <dbl> 58.16, 126.20, 88.70, 88.76, 140.80, 55.20, 63.10, 1…\n$ Seats             <int> 5, 5, 5, 7, 5, 5, 5, 8, 5, 5, 5, 5, 5, 5, 5, 7, 5, 5…\n$ New_Price         <chr> \"\", \"\", \"8.61 Lakh\", \"\", \"\", \"\", \"\", \"21 Lakh\", \"\", …\n$ Price             <dbl> 1.75, 12.50, 4.50, 6.00, 17.74, 2.35, 3.50, 17.50, 5…\n```\n:::\n:::\n\n\n<span style=\"color:red\">This is be the tidied dataset that we will be using.</span>",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}