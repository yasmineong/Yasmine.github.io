glimpse(new_cars)
cars1 <- new_cars %>%
separate(Mileage, into = c("Mileage_v", "Mileage_unit"), sep = " ")
cars2 <- cars1 %>%
separate(Name, into = c("Brand", "Model"), sep = " ", extra = "merge") %>%
mutate(Brand = case_when(
Brand == "ISUZU" ~ "Isuzu",
Brand == "Land" ~ "Land Rover",
TRUE ~ Brand
))
cars <- cars2 %>%
mutate("Engine/CC" = as.numeric(str_remove(Engine, "CC")),
"Power/bhp" = as.numeric(str_remove(Power, "bhp")),
"Mileage_value" = as.numeric(Mileage_v),
"Car_age" =  year(Sys.Date()) - Year
) %>%
select(-c(Power, Engine, Mileage_v))
cars <- cars %>%
select(Brand, Model, Location, Year, Car_age, Kilometers_Driven, Fuel_Type, Transmission, Owner_Type, Mileage_value, Mileage_unit, `Engine/CC`, `Power/bhp`, Seats, New_Price, Price)
glimpse(cars)
cars %>%
filter(Kilometers_Driven <= 4e+06) %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year, Location) %>%
summarise(Ave_km_driven = mean(Kilometers_Driven, na.rm = T)) %>%
ggplot(aes(x = Year, y = Ave_km_driven)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Graph of average kilometers driven in each part of India against time",
x = "Year",
y = "Average kilometers driven")
shiny::runApp('Documents/NUS/NM2207/Yasmine.github.io/MyShinyApp')
runApp('Documents/NUS/NM2207/Yasmine.github.io/MyShinyApp')
runApp('Documents/NUS/NM2207/Yasmine.github.io/MyShinyApp')
runApp('Documents/NUS/NM2207/Yasmine.github.io/MyShinyApp')
setwd("~/Documents/NUS/NM2207/Yasmine.github.io")
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
source("~/Documents/NUS/NM2207/Yasmine.github.io/MyShinyApp/app.R")
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
View(cars_data)
runApp('MyShinyApp')
runApp('MyShinyApp')
.btn {
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("lubridate")
install.packages("stringr")
library(lubridate)
library(stringr)
cars %>%
filter(Owner_Type == "Second") %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Location, Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
labs(title = "Prices of second hand cars in different parts of India against time") +
facet_wrap(~ Location, nrow = 4, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, size = 7, vjust = 0.5))
install.packages("lubridate")
library(tidyverse)
glimpse(cars)
library(lubridate)
library(stringr)
cars %>%
filter(Owner_Type == "Second") %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Location, Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
labs(title = "Prices of second hand cars in different parts of India against time") +
facet_wrap(~ Location, nrow = 4, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, size = 7, vjust = 0.5))
library(tidyverse)
library(lubridate)
library(stringr)
cars %>%
filter(Owner_Type == "Second") %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Location, Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
labs(title = "Prices of second hand cars in different parts of India against time") +
facet_wrap(~ Location, nrow = 4, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, size = 7, vjust = 0.5))
library(lubridate)
library(stringr)
cars %>%
filter(Owner_Type == "Second") %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Location, Year) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
labs(title = "Prices of second hand cars in different parts of India against time") +
facet_wrap(~ Location, nrow = 4, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, size = 7, vjust = 0.5))
cars %>%
filter(Owner_Type == c("First", "Second")) %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year, Owner_Type) %>%
summarise(Price = mean(Price, na.rm = T)) %>%
ggplot(aes(x = Year, y = Price)) +
geom_line() +
geom_point(colour = "red") +
facet_wrap(~ Owner_Type) +
labs(title = "Overall prices of first and second hand cars in India against time") +
theme_bw()
shiny::runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
runApp('MyShinyApp')
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
library(patchwork)
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
library(patchwork)
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(hjust = 1))
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
library(patchwork)
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5)
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6))
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
library(patchwork)
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6))
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6))
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
library(patchwork)
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6, angle = 45))
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6))
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
library(patchwork)
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6, angle = 30))
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6))
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
library(patchwork)
graph1 <- cars %>%
na.omit() %>%
ggplot(aes(x = Price, fill = Transmission)) +
geom_density(adjust = 0.5)
graph2 <- cars %>%
na.omit() %>%
ggplot(aes(x = Car_age, fill = Transmission)) +
geom_density(adjust = 0.5)
graph3 <- cars %>%
na.omit() %>%
ggplot(aes(x = Kilometers_Driven, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6, angle = 25))
graph4 <- cars %>%
na.omit() %>%
ggplot(aes(x = Mileage_value, fill = Transmission)) +
geom_density(adjust = 0.5)
graph5 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Engine/CC`, fill = Transmission)) +
geom_density(adjust = 0.5)
graph6 <- cars %>%
na.omit() %>%
ggplot(aes(x = `Power/bhp`, fill = Transmission)) +
geom_density(adjust = 0.5) +
theme(axis.text.x = element_text(size = 6))
graph7 <- cars %>%
na.omit() %>%
ggplot(aes(x = Seats, fill = Transmission)) +
geom_density(adjust = 0.5)
graph1 + graph2 + graph3 + graph4 + graph5 + graph6 + graph7 + plot_layout(ncol = 2)
runApp('MyShinyApp')
runApp('MyShinyApp')
library(shiny)
library(DT)
library(shiny)
library(tidyverse)
new_cars <- read.csv("used_cars_data.csv")
cars1 <- new_cars %>%
separate(Mileage, into = c("Mileage_v", "Mileage_unit"), sep = " ")
cars2 <- cars1 %>%
separate(Name, into = c("Brand", "Model"), sep = " ", extra = "merge") %>%
mutate(Brand = case_when(
Brand == "ISUZU" ~ "Isuzu",
Brand == "Land" ~ "Land Rover",
TRUE ~ Brand
))
cars <- cars2 %>%
mutate("Engine/CC" = as.numeric(str_remove(Engine, "CC")),
"Power/bhp" = as.numeric(str_remove(Power, "bhp")),
"Mileage_value" = as.numeric(Mileage_v),
"Car_age" =  year(Sys.Date()) - Year
) %>%
select(-c(Power, Engine, Mileage_v))
cars <- cars %>%
select(Brand, Model, Location, Year, Car_age, Kilometers_Driven, Fuel_Type, Transmission, Owner_Type, Mileage_value, Mileage_unit, `Engine/CC`, `Power/bhp`, Seats, New_Price, Price)
cars_data <- cars %>%
filter(Kilometers_Driven <= 4e+06) %>%
mutate(Year = ym(str_c(Year, "-01"))) %>%
na.omit() %>%
group_by(Year) %>%
mutate(Ave_km_driven = mean(Kilometers_Driven, na.rm = T),
Ave_power = mean(`Power/bhp`))
ui <- fluidPage(
titlePanel("Car trends"),
sidebarLayout(
sidebarPanel(
selectInput("City", "Select City:",
choices = unique(cars$Location)),
actionButton("update", "Update"),
style = "background-color:  #89DDFF; color: black;"
),
mainPanel(
titlePanel("What is the average kilometer driven by the car in each city of India?"),
plotOutput("avg_km_plot"),
plotOutput("power_plot")
)
)
)
# Define server logic
server <- function(input, output) {
# Reactive subset of data based on user input
selected_data <- reactive({
subset(cars_data, Location == input$City)
})
# Plot for average kilometers driven
output$avg_km_plot <- renderPlot({
ggplot(selected_data(), aes(x = Year, y = Ave_km_driven)) +
geom_line() +
labs(title = "Average Kilometers Driven per Year",
x = "Year", y = "Average Kilometers Driven") +
theme_light() +  # Apply minimal theme
theme(text = element_text(size = 12, family = "Arial")) +  # Customize text size and font
theme(panel.grid = element_blank())
})
# Plot for mileage per year
output$power_plot <- renderPlot({
ggplot(selected_data(), aes(x = Year, y = Ave_power)) +
geom_line() +
labs(title = "Average power per Year",
x = "Year", y = "Power")
})
}
shinyApp(ui = ui, server = server)
setwd("~/Documents/NUS/NM2207/Yasmine.github.io/MyShinyApp")
runApp()
View(cars)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
new_cars <- read.csv("used_cars_data.csv")
cars1 <- new_cars %>%
separate(Mileage, into = c("Mileage_v", "Mileage_unit"), sep = " ")
cars2 <- cars1 %>%
separate(Name, into = c("Brand", "Model"), sep = " ", extra = "merge") %>%
mutate(Brand = case_when(
Brand == "ISUZU" ~ "Isuzu",
Brand == "Land" ~ "Land Rover",
TRUE ~ Brand
))
cars <- cars2 %>%
mutate("Engine/CC" = as.numeric(str_remove(Engine, "CC")),
"Power/bhp" = as.numeric(str_remove(Power, "bhp")),
"Mileage_value" = as.numeric(Mileage_v),
"Car_age" =  year(Sys.Date()) - Year
) %>%
select(-c(Power, Engine, Mileage_v))
cars <- cars %>%
select(Brand, Model, Location, Year, Car_age, Kilometers_Driven, Fuel_Type, Transmission, Owner_Type, Mileage_value, Mileage_unit, `Engine/CC`, `Power/bhp`, Seats, New_Price, Price)
knitr::kable(head(summary(cars)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
